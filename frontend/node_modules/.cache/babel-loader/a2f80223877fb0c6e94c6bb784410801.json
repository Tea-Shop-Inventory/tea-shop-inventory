{"ast":null,"code":"import * as actionTypes from \"./shopping-types\";\nimport Data from \"../../Data\";\nconst INITIAL_STATE = {\n  cart: [],\n  currentItem: null\n};\n\nconst shopReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      // Great Item data from products array\n      const item = state.products.find(product => product.id === action.payload.id); // Check if Item is in cart already\n\n      const inCart = state.cart.find(item => item.id === action.payload.id ? true : false);\n      return { ...state,\n        cart: inCart ? state.cart.map(item => item.id === action.payload.id ? { ...item,\n          qty: item.qty + 1\n        } : item) : [...state.cart, { ...item,\n          qty: 1\n        }]\n      };\n\n    case actionTypes.REMOVE_FROM_CART:\n      return { ...state,\n        cart: state.cart.filter(item => item.id !== action.payload.id)\n      };\n\n    case actionTypes.ADJUST_QTY:\n      return { ...state,\n        cart: state.cart.map(item => item.id === action.payload.id ? { ...item,\n          qty: +action.payload.qty\n        } : item)\n      };\n\n    case actionTypes.LOAD_CURRENT_ITEM:\n      return { ...state,\n        currentItem: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"sources":["C:/Users/User/Desktop/tea-shop-inventory/frontend/src/Redux/Shopping/shopping-reducer.js"],"names":["actionTypes","Data","INITIAL_STATE","cart","currentItem","shopReducer","state","action","type","ADD_TO_CART","item","products","find","product","id","payload","inCart","map","qty","REMOVE_FROM_CART","filter","ADJUST_QTY","LOAD_CURRENT_ITEM"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,kBAA7B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAEA,MAAMC,aAAa,GAAG;AAEpBC,EAAAA,IAAI,EAAE,EAFc;AAGpBC,EAAAA,WAAW,EAAE;AAHO,CAAtB;;AAMA,MAAMC,WAAW,GAAG,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BJ,aAA0B;AAAA,MAAXK,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAW,CAACS,WAAjB;AACE;AACA,YAAMC,IAAI,GAAGJ,KAAK,CAACK,QAAN,CAAeC,IAAf,CACVC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACQ,OAAP,CAAeD,EADhC,CAAb,CAFF,CAKE;;AACA,YAAME,MAAM,GAAGV,KAAK,CAACH,IAAN,CAAWS,IAAX,CAAiBF,IAAD,IAC7BA,IAAI,CAACI,EAAL,KAAYP,MAAM,CAACQ,OAAP,CAAeD,EAA3B,GAAgC,IAAhC,GAAuC,KAD1B,CAAf;AAIA,aAAO,EACL,GAAGR,KADE;AAELH,QAAAA,IAAI,EAAEa,MAAM,GACRV,KAAK,CAACH,IAAN,CAAWc,GAAX,CAAgBP,IAAD,IACbA,IAAI,CAACI,EAAL,KAAYP,MAAM,CAACQ,OAAP,CAAeD,EAA3B,GACI,EAAE,GAAGJ,IAAL;AAAWQ,UAAAA,GAAG,EAAER,IAAI,CAACQ,GAAL,GAAW;AAA3B,SADJ,GAEIR,IAHN,CADQ,GAMR,CAAC,GAAGJ,KAAK,CAACH,IAAV,EAAgB,EAAE,GAAGO,IAAL;AAAWQ,UAAAA,GAAG,EAAE;AAAhB,SAAhB;AARC,OAAP;;AAUF,SAAKlB,WAAW,CAACmB,gBAAjB;AACE,aAAO,EACL,GAAGb,KADE;AAELH,QAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,CAAWiB,MAAX,CAAmBV,IAAD,IAAUA,IAAI,CAACI,EAAL,KAAYP,MAAM,CAACQ,OAAP,CAAeD,EAAvD;AAFD,OAAP;;AAIF,SAAKd,WAAW,CAACqB,UAAjB;AACE,aAAO,EACL,GAAGf,KADE;AAELH,QAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,CAAWc,GAAX,CAAgBP,IAAD,IACnBA,IAAI,CAACI,EAAL,KAAYP,MAAM,CAACQ,OAAP,CAAeD,EAA3B,GACI,EAAE,GAAGJ,IAAL;AAAWQ,UAAAA,GAAG,EAAE,CAACX,MAAM,CAACQ,OAAP,CAAeG;AAAhC,SADJ,GAEIR,IAHA;AAFD,OAAP;;AAQF,SAAKV,WAAW,CAACsB,iBAAjB;AACE,aAAO,EACL,GAAGhB,KADE;AAELF,QAAAA,WAAW,EAAEG,MAAM,CAACQ;AAFf,OAAP;;AAIF;AACE,aAAOT,KAAP;AAzCJ;AA2CD,CA5CD;;AA8CA,eAAeD,WAAf","sourcesContent":["import * as actionTypes from \"./shopping-types\";\r\nimport Data from \"../../Data\";\r\n\r\nconst INITIAL_STATE = {\r\n  \r\n  cart: [],\r\n  currentItem: null,\r\n};\r\n\r\nconst shopReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_TO_CART:\r\n      // Great Item data from products array\r\n      const item = state.products.find(\r\n        (product) => product.id === action.payload.id\r\n      );\r\n      // Check if Item is in cart already\r\n      const inCart = state.cart.find((item) =>\r\n        item.id === action.payload.id ? true : false\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        cart: inCart\r\n          ? state.cart.map((item) =>\r\n              item.id === action.payload.id\r\n                ? { ...item, qty: item.qty + 1 }\r\n                : item\r\n            )\r\n          : [...state.cart, { ...item, qty: 1 }],\r\n      };\r\n    case actionTypes.REMOVE_FROM_CART:\r\n      return {\r\n        ...state,\r\n        cart: state.cart.filter((item) => item.id !== action.payload.id),\r\n      };\r\n    case actionTypes.ADJUST_QTY:\r\n      return {\r\n        ...state,\r\n        cart: state.cart.map((item) =>\r\n          item.id === action.payload.id\r\n            ? { ...item, qty: +action.payload.qty }\r\n            : item\r\n        ),\r\n      };\r\n    case actionTypes.LOAD_CURRENT_ITEM:\r\n      return {\r\n        ...state,\r\n        currentItem: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default shopReducer;"]},"metadata":{},"sourceType":"module"}